#===============================================================================
# purpose:
#    This file provide two vars: VFMW_CFLAGS, VFMW_OBJS
#    VFMW_CFLAGS --- compile options
#    VFMW_OBJS   --- compile objects
#===============================================================================
VFMW_DIR      := $(VFMW_NS)

VFMW_CFLAGS   := -DENV_SOS_KERNEL

VFMW_SRC_DIR  := $(VFMW_NS)
PRODUCT_DIR   := Hi3798MV310
VFMW_OBJS     := $(VFMW_SRC_DIR)/product/$(PRODUCT_DIR)/product.o

include $(VFMW_DIR)/product/$(PRODUCT_DIR)/SOS_CFG/vfmw_config.cfg


#===============================================================================
#   macro definition
#===============================================================================
VFMW_CFLAGS += -DSCD_MP4_SLICE_ENABLE
VFMW_CFLAGS += -DSUPPORT_JPEG_444
VFMW_CFLAGS += -DVFMW_EXTRA_TYPE_DEFINE
VFMW_CFLAGS += -DPRODUCT_STB
VFMW_CFLAGS += -D__VFMW_REGISTER_ISR__
VFMW_CFLAGS += -DQ_MATRIX_FIXED
#VFMW_CFLAGS += -DSCD_BUSY_WAITTING
#VFMW_CFLAGS += -DVDM_BUSY_WAITTING
VFMW_CFLAGS += -DHI_SMMU_SUPPORT
VFMW_CFLAGS += -DHI_TEE_SUPPORT

ifeq ($(VFMW_DSP_V100_SUPPORT),y)
DSP_DIR := HiDSPV100
endif

ifeq ($(VFMW_SCD_V300_SUPPORT),y)
SCD_DIR := HiSCDV300
endif

ifeq ($(VFMW_VDH_V5R2C1_SUPPORT),y)
VDH_DIR := HiVDHV5R2C1
VFMW_CFLAGS += -DVFMW_VDH_V5R2C1_SUPPORT
endif

ifeq ($(VDH_DISTRIBUTOR_ENABLE),y)
VFMW_CFLAGS += -DVDH_DISTRIBUTOR_ENABLE
endif

ifeq ($(VFMW_SYSTEM_TIME_OUT),y)
VFMW_CFLAGS += -DCFG_SCD_TIME_OUT=$(VFMW_SCD_TIME_OUT)
VFMW_CFLAGS += -DCFG_VDH_TIME_OUT=$(VFMW_VDH_TIME_OUT)
endif

ifeq ($(VFMW_BPD_H_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_BPD_H_SUPPORT
endif

ifeq ($(VFMW_H263_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_H263_SUPPORT
endif

ifeq ($(VFMW_JPEG_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_JPEG_SUPPORT
ifeq ($(VFMW_JPEG_444),y)
VFMW_CFLAGS += -DVFMW_JPEG_SUPPORT_444
endif
endif

ifeq ($(VFMW_RAW_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_RAW_SUPPORT
endif

ifeq ($(VFMW_USER_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_USER_SUPPORT
endif

ifeq ($(VFMW_CHAN_SUPPORT),y)
VFMW_CFLAGS += -DCFG_MAX_CHAN_NUM=$(VFMW_MAX_CHAN_NUM)
endif

ifeq ($(VFMW_RAW_NUM_SUPPORT),y)
VFMW_CFLAGS += -DCFG_MAX_RAW_NUM=$(VFMW_MAX_RAW_NUM)
endif

ifeq ($(VFMW_SEG_NUM_SUPPORT),y)
VFMW_CFLAGS += -DCFG_MAX_SEG_NUM=$(VFMW_MAX_SEG_NUM)
endif

ifeq ($(VFMW_SCD_MSG_SUPPORT),y)
VFMW_CFLAGS += -DCFG_SCD_BUF=$(VFMW_SCD_MSG_BUF)
endif

ifeq ($(VFMW_DPRINT_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_DPRINT_SUPPORT
endif

ifeq ($(VFMW_AVSPLUS_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_AVSPLUS_SUPPORT
endif

ifeq ($(VFMW_MODULE_LOWDLY_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_MODULE_LOWDLY_SUPPORT
endif

ifeq ($(VFMW_SYSTEM_REG_DISABLE),y)
VFMW_CFLAGS += -DVFMW_SYSTEM_REG_DISABLE
endif

ifeq ($(VFMW_10BIT_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_10BIT_SUPPORT
ifeq ($(VFMW_VP9_10BIT_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_VP9_10BIT_SUPPORT
endif
endif

ifeq ($(VFMW_H264_SED_ONLY_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_H264_SED_ONLY_SUPPORT
endif

ifeq ($(VFMW_HEVC_SED_ONLY_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_HEVC_SED_ONLY_SUPPORT
endif


#===============================================================================
#   include path
#===============================================================================
VFMW_CFLAGS += -I$(VFMW_DIR)/adapter
VFMW_CFLAGS += -I$(VFMW_DIR)/core/common
VFMW_CFLAGS += -I$(VFMW_DIR)/core/syntax
VFMW_CFLAGS += -I$(VFMW_DIR)/core/driver/$(DSP_DIR)
VFMW_CFLAGS += -I$(VFMW_DIR)/core/driver/$(SCD_DIR)
VFMW_CFLAGS += -I$(VFMW_DIR)/core/driver/$(VDH_DIR)
VFMW_CFLAGS += -I$(VFMW_DIR)/platform/osal
VFMW_CFLAGS += -I$(VFMW_DIR)/platform/osal/sos_kernel
VFMW_CFLAGS += -I$(VFMW_DIR)/product
VFMW_CFLAGS += -I$(VFMW_DIR)/product/$(PRODUCT_DIR)

VFMW_CFLAGS += -I$(VFMW_DIR)/platform/tee/client
VFMW_CFLAGS += -I$(VFMW_DIR)/platform/tee/server

ifeq ($(VDH_DISTRIBUTOR_ENABLE),y)
VFMW_CFLAGS += -I$(VFMW_DIR)/module/distributor
endif

ifeq ($(VFMW_H263_SUPPORT),y)
VFMW_CFLAGS += -I$(VFMW_DIR)/module/svdec
endif


#===============================================================================
#   source objects
#===============================================================================
VFMW_OBJS   += $(VFMW_SRC_DIR)/platform/tee/server/vfmw_tee_server.o

VFMW_OBJS   += $(VFMW_SRC_DIR)/core/common/vfmw.o                       \
               $(VFMW_SRC_DIR)/core/common/ctrl_case.o                  \
               $(VFMW_SRC_DIR)/core/common/bitstream.o                  \
               $(VFMW_SRC_DIR)/core/common/vfmw_write_yuv.o             \
               $(VFMW_SRC_DIR)/core/common/yuv_convert.o                \
               $(VFMW_SRC_DIR)/core/common/public.o                     \
               $(VFMW_SRC_DIR)/core/common/mem_manage.o                 \
               $(VFMW_SRC_DIR)/core/common/postprocess.o                \
               $(VFMW_SRC_DIR)/core/common/vfmw_ctrl.o                  \
               $(VFMW_SRC_DIR)/core/common/fsp.o                        \
               $(VFMW_SRC_DIR)/core/common/vdm_drv.o                    \
               $(VFMW_SRC_DIR)/core/syntax/syntax.o

VFMW_OBJS   += $(VFMW_SRC_DIR)/platform/osal/sos_kernel/vfmw_sos_kernel_osal.o

ifeq ($(VDH_DISTRIBUTOR_ENABLE),y)
VFMW_OBJS   += $(VFMW_SRC_DIR)/module/distributor/vdh_common.o
VFMW_OBJS   += $(VFMW_SRC_DIR)/module/distributor/vdh_secure.o
VFMW_OBJS   += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdh_module.o
endif


#===============================================================================
#   video standard support
#===============================================================================
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(SCD_DIR)/scd_drv.o

ifeq ($(VFMW_H264_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_H264_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/h264.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_h264.o

ifeq ($(VFMW_MVC_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_MVC_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/mvc.o
endif

endif

ifeq ($(VFMW_HEVC_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_HEVC_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/hevc.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_hevc.o
endif

ifeq ($(VFMW_VP9_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_VP9_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/vp9.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_vp9.o
endif

ifeq ($(VFMW_MPEG2_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_MPEG2_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/mpeg2.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_mpeg2.o
endif

ifeq ($(VFMW_MPEG4_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_MPEG4_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/mpeg4.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_mpeg4.o
endif

ifeq ($(VFMW_AVS_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_AVS_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/avs.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_avs.o
endif


ifeq ($(VFMW_VC1_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_VC1_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/vc1.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_vc1.o     \
             $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/bitplane.o
endif

ifeq ($(VFMW_REAL8_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_REAL8_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/real8.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_real8.o
endif

ifeq ($(VFMW_REAL9_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_REAL9_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/real9.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_real9.o
endif

ifeq ($(VFMW_VP6_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_VP6_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/vp6.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_vp6.o
endif

ifeq ($(VFMW_VP8_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_VP8_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/vp8.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_vp8.o
endif

ifeq ($(VFMW_DIVX3_SUPPORT),y)
VFMW_CFLAGS += -DVFMW_DIVX3_SUPPORT
VFMW_OBJS += $(VFMW_SRC_DIR)/core/syntax/divx3.o
VFMW_OBJS += $(VFMW_SRC_DIR)/core/driver/$(VDH_DIR)/vdm_hal_divx3.o
endif
